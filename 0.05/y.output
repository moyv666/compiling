State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: fun_de_list main_declaration

    2 fun_de_list: fun_de fun_de_list
    3            | /* empty */

    4 fun_de: FUNKTION ID SLBRACKET SRBRACKET function_body

    5 main_declaration: MAIN SLBRACKET SRBRACKET function_body

    6 function_body: BLBRACKET declaration_list statement_list BRBRACKET

    7 declaration_list: /* empty */

    8 $@1: /* empty */

    9 declaration_list: declaration_stat $@1 declaration_list

   10 declaration_stat: INT ID SEMICOLON

   11 statement_list: statement statement_list
   12               | /* empty */

   13 statement: if_stat
   14          | while_stat
   15          | for_stat
   16          | read_stat
   17          | write_stat
   18          | compound_stat
   19          | expression_stat
   20          | call_stat

   21 if_stat: IF SLBRACKET expr SRBRACKET statement else_stat

   22 else_stat: ELSE statement
   23          | /* empty */

   24 while_stat: WHILE SLBRACKET expr SRBRACKET statement

   25 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET statement

   26 write_stat: WRITE expr SEMICOLON

   27 read_stat: READ ID SEMICOLON

   28 expression_stat: expr SEMICOLON
   29                | SEMICOLON

   30 compound_stat: BLBRACKET statement_list BRBRACKET

   31 call_stat: CALL ID SLBRACKET SRBRACKET

   32 expr: ID EQL bool_expr
   33     | bool_expr

   34 bool_expr: additive_expr bool_expr_rest

   35 bool_expr_rest: COMPARE additive_expr bool_expr_rest
   36               | /* empty */

   37 additive_expr: term additive_expr_rest

   38 additive_expr_rest: ADD term additive_expr_rest
   39                   | MIN term additive_expr_rest
   40                   | /* empty */

   41 term: factor term_rest

   42 term_rest: MUL factor term_rest
   43          | DIV factor term_rest
   44          | /* empty */

   45 factor: SLBRACKET additive_expr SRBRACKET
   46       | ID
   47       | NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNKTION (258) 4
MAIN (259) 5
INT (260) 10
IF (261) 21
WHILE (262) 24
FOR (263) 25
ELSE (264) 22
WRITE (265) 26
READ (266) 27
CALL (267) 31
NUM (268) 47
ID (269) 4 10 27 31 32 46
ADD (270) 38
MIN (271) 39
MUL (272) 42
DIV (273) 43
EQL (274) 32
BLBRACKET (275) 6 30
BRBRACKET (276) 6 30
SLBRACKET (277) 4 5 21 24 25 31 45
SRBRACKET (278) 4 5 21 24 25 31 45
SEMICOLON (279) 10 25 26 27 28 29
COMPARE (280) 35


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
program (27)
    on left: 1, on right: 0
fun_de_list (28)
    on left: 2 3, on right: 1 2
fun_de (29)
    on left: 4, on right: 2
main_declaration (30)
    on left: 5, on right: 1
function_body (31)
    on left: 6, on right: 4 5
declaration_list (32)
    on left: 7 9, on right: 6 9
$@1 (33)
    on left: 8, on right: 9
declaration_stat (34)
    on left: 10, on right: 9
statement_list (35)
    on left: 11 12, on right: 6 11 30
statement (36)
    on left: 13 14 15 16 17 18 19 20, on right: 11 21 22 24 25
if_stat (37)
    on left: 21, on right: 13
else_stat (38)
    on left: 22 23, on right: 21
while_stat (39)
    on left: 24, on right: 14
for_stat (40)
    on left: 25, on right: 15
write_stat (41)
    on left: 26, on right: 17
read_stat (42)
    on left: 27, on right: 16
expression_stat (43)
    on left: 28 29, on right: 19
compound_stat (44)
    on left: 30, on right: 18
call_stat (45)
    on left: 31, on right: 20
expr (46)
    on left: 32 33, on right: 21 24 25 26 28
bool_expr (47)
    on left: 34, on right: 32 33
bool_expr_rest (48)
    on left: 35 36, on right: 34 35
additive_expr (49)
    on left: 37, on right: 34 35 45
additive_expr_rest (50)
    on left: 38 39 40, on right: 37 38 39
term (51)
    on left: 41, on right: 37 38 39
term_rest (52)
    on left: 42 43 44, on right: 41 42 43
factor (53)
    on left: 45 46 47, on right: 41 42 43


state 0

    0 $accept: . program $end

    FUNKTION  shift, and go to state 1

    $default  reduce using rule 3 (fun_de_list)

    program      go to state 2
    fun_de_list  go to state 3
    fun_de       go to state 4


state 1

    4 fun_de: FUNKTION . ID SLBRACKET SRBRACKET function_body

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: fun_de_list . main_declaration

    MAIN  shift, and go to state 7

    main_declaration  go to state 8


state 4

    2 fun_de_list: fun_de . fun_de_list

    FUNKTION  shift, and go to state 1

    $default  reduce using rule 3 (fun_de_list)

    fun_de_list  go to state 9
    fun_de       go to state 4


state 5

    4 fun_de: FUNKTION ID . SLBRACKET SRBRACKET function_body

    SLBRACKET  shift, and go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    5 main_declaration: MAIN . SLBRACKET SRBRACKET function_body

    SLBRACKET  shift, and go to state 11


state 8

    1 program: fun_de_list main_declaration .

    $default  reduce using rule 1 (program)


state 9

    2 fun_de_list: fun_de fun_de_list .

    $default  reduce using rule 2 (fun_de_list)


state 10

    4 fun_de: FUNKTION ID SLBRACKET . SRBRACKET function_body

    SRBRACKET  shift, and go to state 12


state 11

    5 main_declaration: MAIN SLBRACKET . SRBRACKET function_body

    SRBRACKET  shift, and go to state 13


state 12

    4 fun_de: FUNKTION ID SLBRACKET SRBRACKET . function_body

    BLBRACKET  shift, and go to state 14

    function_body  go to state 15


state 13

    5 main_declaration: MAIN SLBRACKET SRBRACKET . function_body

    BLBRACKET  shift, and go to state 14

    function_body  go to state 16


state 14

    6 function_body: BLBRACKET . declaration_list statement_list BRBRACKET

    INT  shift, and go to state 17

    $default  reduce using rule 7 (declaration_list)

    declaration_list  go to state 18
    declaration_stat  go to state 19


state 15

    4 fun_de: FUNKTION ID SLBRACKET SRBRACKET function_body .

    $default  reduce using rule 4 (fun_de)


state 16

    5 main_declaration: MAIN SLBRACKET SRBRACKET function_body .

    $default  reduce using rule 5 (main_declaration)


state 17

   10 declaration_stat: INT . ID SEMICOLON

    ID  shift, and go to state 20


state 18

    6 function_body: BLBRACKET declaration_list . statement_list BRBRACKET

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 12 (statement_list)

    statement_list   go to state 32
    statement        go to state 33
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 19

    9 declaration_list: declaration_stat . $@1 declaration_list

    $default  reduce using rule 8 ($@1)

    $@1  go to state 47


state 20

   10 declaration_stat: INT ID . SEMICOLON

    SEMICOLON  shift, and go to state 48


state 21

   21 if_stat: IF . SLBRACKET expr SRBRACKET statement else_stat

    SLBRACKET  shift, and go to state 49


state 22

   24 while_stat: WHILE . SLBRACKET expr SRBRACKET statement

    SLBRACKET  shift, and go to state 50


state 23

   25 for_stat: FOR . SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET statement

    SLBRACKET  shift, and go to state 51


state 24

   26 write_stat: WRITE . expr SEMICOLON

    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    SLBRACKET  shift, and go to state 30

    expr           go to state 52
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 25

   27 read_stat: READ . ID SEMICOLON

    ID  shift, and go to state 53


state 26

   31 call_stat: CALL . ID SLBRACKET SRBRACKET

    ID  shift, and go to state 54


state 27

   47 factor: NUM .

    $default  reduce using rule 47 (factor)


state 28

   32 expr: ID . EQL bool_expr
   46 factor: ID .

    EQL  shift, and go to state 55

    $default  reduce using rule 46 (factor)


state 29

   30 compound_stat: BLBRACKET . statement_list BRBRACKET

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 12 (statement_list)

    statement_list   go to state 56
    statement        go to state 33
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 30

   45 factor: SLBRACKET . additive_expr SRBRACKET

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    additive_expr  go to state 58
    term           go to state 45
    factor         go to state 46


state 31

   29 expression_stat: SEMICOLON .

    $default  reduce using rule 29 (expression_stat)


state 32

    6 function_body: BLBRACKET declaration_list statement_list . BRBRACKET

    BRBRACKET  shift, and go to state 59


state 33

   11 statement_list: statement . statement_list

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    $default  reduce using rule 12 (statement_list)

    statement_list   go to state 60
    statement        go to state 33
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 34

   13 statement: if_stat .

    $default  reduce using rule 13 (statement)


state 35

   14 statement: while_stat .

    $default  reduce using rule 14 (statement)


state 36

   15 statement: for_stat .

    $default  reduce using rule 15 (statement)


state 37

   17 statement: write_stat .

    $default  reduce using rule 17 (statement)


state 38

   16 statement: read_stat .

    $default  reduce using rule 16 (statement)


state 39

   19 statement: expression_stat .

    $default  reduce using rule 19 (statement)


state 40

   18 statement: compound_stat .

    $default  reduce using rule 18 (statement)


state 41

   20 statement: call_stat .

    $default  reduce using rule 20 (statement)


state 42

   28 expression_stat: expr . SEMICOLON

    SEMICOLON  shift, and go to state 61


state 43

   33 expr: bool_expr .

    $default  reduce using rule 33 (expr)


state 44

   34 bool_expr: additive_expr . bool_expr_rest

    COMPARE  shift, and go to state 62

    $default  reduce using rule 36 (bool_expr_rest)

    bool_expr_rest  go to state 63


state 45

   37 additive_expr: term . additive_expr_rest

    ADD  shift, and go to state 64
    MIN  shift, and go to state 65

    $default  reduce using rule 40 (additive_expr_rest)

    additive_expr_rest  go to state 66


state 46

   41 term: factor . term_rest

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68

    $default  reduce using rule 44 (term_rest)

    term_rest  go to state 69


state 47

    9 declaration_list: declaration_stat $@1 . declaration_list

    INT  shift, and go to state 17

    $default  reduce using rule 7 (declaration_list)

    declaration_list  go to state 70
    declaration_stat  go to state 19


state 48

   10 declaration_stat: INT ID SEMICOLON .

    $default  reduce using rule 10 (declaration_stat)


state 49

   21 if_stat: IF SLBRACKET . expr SRBRACKET statement else_stat

    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    SLBRACKET  shift, and go to state 30

    expr           go to state 71
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 50

   24 while_stat: WHILE SLBRACKET . expr SRBRACKET statement

    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    SLBRACKET  shift, and go to state 30

    expr           go to state 72
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 51

   25 for_stat: FOR SLBRACKET . expr SEMICOLON expr SEMICOLON expr SRBRACKET statement

    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    SLBRACKET  shift, and go to state 30

    expr           go to state 73
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 52

   26 write_stat: WRITE expr . SEMICOLON

    SEMICOLON  shift, and go to state 74


state 53

   27 read_stat: READ ID . SEMICOLON

    SEMICOLON  shift, and go to state 75


state 54

   31 call_stat: CALL ID . SLBRACKET SRBRACKET

    SLBRACKET  shift, and go to state 76


state 55

   32 expr: ID EQL . bool_expr

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    bool_expr      go to state 77
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 56

   30 compound_stat: BLBRACKET statement_list . BRBRACKET

    BRBRACKET  shift, and go to state 78


state 57

   46 factor: ID .

    $default  reduce using rule 46 (factor)


state 58

   45 factor: SLBRACKET additive_expr . SRBRACKET

    SRBRACKET  shift, and go to state 79


state 59

    6 function_body: BLBRACKET declaration_list statement_list BRBRACKET .

    $default  reduce using rule 6 (function_body)


state 60

   11 statement_list: statement statement_list .

    $default  reduce using rule 11 (statement_list)


state 61

   28 expression_stat: expr SEMICOLON .

    $default  reduce using rule 28 (expression_stat)


state 62

   35 bool_expr_rest: COMPARE . additive_expr bool_expr_rest

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    additive_expr  go to state 80
    term           go to state 45
    factor         go to state 46


state 63

   34 bool_expr: additive_expr bool_expr_rest .

    $default  reduce using rule 34 (bool_expr)


state 64

   38 additive_expr_rest: ADD . term additive_expr_rest

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    term    go to state 81
    factor  go to state 46


state 65

   39 additive_expr_rest: MIN . term additive_expr_rest

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    term    go to state 82
    factor  go to state 46


state 66

   37 additive_expr: term additive_expr_rest .

    $default  reduce using rule 37 (additive_expr)


state 67

   42 term_rest: MUL . factor term_rest

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    factor  go to state 83


state 68

   43 term_rest: DIV . factor term_rest

    NUM        shift, and go to state 27
    ID         shift, and go to state 57
    SLBRACKET  shift, and go to state 30

    factor  go to state 84


state 69

   41 term: factor term_rest .

    $default  reduce using rule 41 (term)


state 70

    9 declaration_list: declaration_stat $@1 declaration_list .

    $default  reduce using rule 9 (declaration_list)


state 71

   21 if_stat: IF SLBRACKET expr . SRBRACKET statement else_stat

    SRBRACKET  shift, and go to state 85


state 72

   24 while_stat: WHILE SLBRACKET expr . SRBRACKET statement

    SRBRACKET  shift, and go to state 86


state 73

   25 for_stat: FOR SLBRACKET expr . SEMICOLON expr SEMICOLON expr SRBRACKET statement

    SEMICOLON  shift, and go to state 87


state 74

   26 write_stat: WRITE expr SEMICOLON .

    $default  reduce using rule 26 (write_stat)


state 75

   27 read_stat: READ ID SEMICOLON .

    $default  reduce using rule 27 (read_stat)


state 76

   31 call_stat: CALL ID SLBRACKET . SRBRACKET

    SRBRACKET  shift, and go to state 88


state 77

   32 expr: ID EQL bool_expr .

    $default  reduce using rule 32 (expr)


state 78

   30 compound_stat: BLBRACKET statement_list BRBRACKET .

    $default  reduce using rule 30 (compound_stat)


state 79

   45 factor: SLBRACKET additive_expr SRBRACKET .

    $default  reduce using rule 45 (factor)


state 80

   35 bool_expr_rest: COMPARE additive_expr . bool_expr_rest

    COMPARE  shift, and go to state 62

    $default  reduce using rule 36 (bool_expr_rest)

    bool_expr_rest  go to state 89


state 81

   38 additive_expr_rest: ADD term . additive_expr_rest

    ADD  shift, and go to state 64
    MIN  shift, and go to state 65

    $default  reduce using rule 40 (additive_expr_rest)

    additive_expr_rest  go to state 90


state 82

   39 additive_expr_rest: MIN term . additive_expr_rest

    ADD  shift, and go to state 64
    MIN  shift, and go to state 65

    $default  reduce using rule 40 (additive_expr_rest)

    additive_expr_rest  go to state 91


state 83

   42 term_rest: MUL factor . term_rest

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68

    $default  reduce using rule 44 (term_rest)

    term_rest  go to state 92


state 84

   43 term_rest: DIV factor . term_rest

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68

    $default  reduce using rule 44 (term_rest)

    term_rest  go to state 93


state 85

   21 if_stat: IF SLBRACKET expr SRBRACKET . statement else_stat

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    statement        go to state 94
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 86

   24 while_stat: WHILE SLBRACKET expr SRBRACKET . statement

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    statement        go to state 95
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 87

   25 for_stat: FOR SLBRACKET expr SEMICOLON . expr SEMICOLON expr SRBRACKET statement

    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    SLBRACKET  shift, and go to state 30

    expr           go to state 96
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 88

   31 call_stat: CALL ID SLBRACKET SRBRACKET .

    $default  reduce using rule 31 (call_stat)


state 89

   35 bool_expr_rest: COMPARE additive_expr bool_expr_rest .

    $default  reduce using rule 35 (bool_expr_rest)


state 90

   38 additive_expr_rest: ADD term additive_expr_rest .

    $default  reduce using rule 38 (additive_expr_rest)


state 91

   39 additive_expr_rest: MIN term additive_expr_rest .

    $default  reduce using rule 39 (additive_expr_rest)


state 92

   42 term_rest: MUL factor term_rest .

    $default  reduce using rule 42 (term_rest)


state 93

   43 term_rest: DIV factor term_rest .

    $default  reduce using rule 43 (term_rest)


state 94

   21 if_stat: IF SLBRACKET expr SRBRACKET statement . else_stat

    ELSE  shift, and go to state 97

    ELSE      [reduce using rule 23 (else_stat)]
    $default  reduce using rule 23 (else_stat)

    else_stat  go to state 98


state 95

   24 while_stat: WHILE SLBRACKET expr SRBRACKET statement .

    $default  reduce using rule 24 (while_stat)


state 96

   25 for_stat: FOR SLBRACKET expr SEMICOLON expr . SEMICOLON expr SRBRACKET statement

    SEMICOLON  shift, and go to state 99


state 97

   22 else_stat: ELSE . statement

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    statement        go to state 100
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 98

   21 if_stat: IF SLBRACKET expr SRBRACKET statement else_stat .

    $default  reduce using rule 21 (if_stat)


state 99

   25 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON . expr SRBRACKET statement

    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    SLBRACKET  shift, and go to state 30

    expr           go to state 101
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 100

   22 else_stat: ELSE statement .

    $default  reduce using rule 22 (else_stat)


state 101

   25 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr . SRBRACKET statement

    SRBRACKET  shift, and go to state 102


state 102

   25 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET . statement

    IF         shift, and go to state 21
    WHILE      shift, and go to state 22
    FOR        shift, and go to state 23
    WRITE      shift, and go to state 24
    READ       shift, and go to state 25
    CALL       shift, and go to state 26
    NUM        shift, and go to state 27
    ID         shift, and go to state 28
    BLBRACKET  shift, and go to state 29
    SLBRACKET  shift, and go to state 30
    SEMICOLON  shift, and go to state 31

    statement        go to state 103
    if_stat          go to state 34
    while_stat       go to state 35
    for_stat         go to state 36
    write_stat       go to state 37
    read_stat        go to state 38
    expression_stat  go to state 39
    compound_stat    go to state 40
    call_stat        go to state 41
    expr             go to state 42
    bool_expr        go to state 43
    additive_expr    go to state 44
    term             go to state 45
    factor           go to state 46


state 103

   25 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET statement .

    $default  reduce using rule 25 (for_stat)
