Terminals unused in grammar

   VOID
   ELSE


Grammar

    0 $accept: program $end

    1 program: main_declaration
    2        | fun_declaration program

    3 fun_declaration: FUNCTION ID SLBRACKET SRBRACKET function_body

    4 main_declaration: MAIN SLBRACKET SRBRACKET function_body

    5 function_body: BLBRACKET declaration_list statement_list BRBRACKET

    6 declaration_list: /* empty */
    7                 | declaration_stat declaration_list

    8 declaration_stat: INT ID SEMICOLON

    9 statement_list: /* empty */
   10               | statement statement_list

   11 statement: if_stat
   12          | while_stat
   13          | for_stat
   14          | read_stat
   15          | write_stat
   16          | compound_stat
   17          | expression_stat
   18          | call_stat

   19 if_stat: IF SLBRACKET expr SRBRACKET statement

   20 while_stat: WHILE SLBRACKET expr SRBRACKET statement

   21 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET statement

   22 write_stat: WRITE expression SEMICOLON

   23 read_stat: READ ID SEMICOLON

   24 compound_stat: BLBRACKET statement_list BRBRACKET

   25 expression_stat: expression SEMICOLON
   26                | SEMICOLON

   27 call_stat: CALL ID SLBRACKET SRBRACKET

   28 expr: ID EQL NUM
   29     | ID COMPARE NUM
   30     | ID EQL ID
   31     | ID COMPARE ID

   32 expression: ID EQL bool_expr
   33           | bool_expr

   34 bool_expr: additive_expr bool_expr_rest

   35 bool_expr_rest: COMPARE additive_expr bool_expr_rest
   36               | /* empty */

   37 additive_expr: term additive_expr_rest

   38 additive_expr_rest: ADD term additive_expr_rest
   39                   | MIN term additive_expr_rest
   40                   | /* empty */

   41 term: factor term_rest

   42 term_rest: MUL factor term_rest
   43          | DIV factor term_rest
   44          | /* empty */

   45 factor: SLBRACKET additive_expr SRBRACKET
   46       | ID
   47       | NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258)
FUNCTION (259) 3
MAIN (260) 4
INT (261) 8
IF (262) 19
WHILE (263) 20
FOR (264) 21
ELSE (265)
WRITE (266) 22
READ (267) 23
CALL (268) 27
NUM (269) 28 29 47
ID (270) 3 8 23 27 28 29 30 31 32 46
ADD (271) 38
MIN (272) 39
MUL (273) 42
DIV (274) 43
EQL (275) 28 30 32
BLBRACKET (276) 5 24
BRBRACKET (277) 5 24
SLBRACKET (278) 3 4 19 20 21 27 45
SRBRACKET (279) 3 4 19 20 21 27 45
SEMICOLON (280) 8 21 22 23 25 26
COMPARE (281) 29 31 35


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1 2, on right: 0 2
fun_declaration (29)
    on left: 3, on right: 2
main_declaration (30)
    on left: 4, on right: 1
function_body (31)
    on left: 5, on right: 3 4
declaration_list (32)
    on left: 6 7, on right: 5 7
declaration_stat (33)
    on left: 8, on right: 7
statement_list (34)
    on left: 9 10, on right: 5 10 24
statement (35)
    on left: 11 12 13 14 15 16 17 18, on right: 10 19 20 21
if_stat (36)
    on left: 19, on right: 11
while_stat (37)
    on left: 20, on right: 12
for_stat (38)
    on left: 21, on right: 13
write_stat (39)
    on left: 22, on right: 15
read_stat (40)
    on left: 23, on right: 14
compound_stat (41)
    on left: 24, on right: 16
expression_stat (42)
    on left: 25 26, on right: 17
call_stat (43)
    on left: 27, on right: 18
expr (44)
    on left: 28 29 30 31, on right: 19 20 21
expression (45)
    on left: 32 33, on right: 22 25
bool_expr (46)
    on left: 34, on right: 32 33
bool_expr_rest (47)
    on left: 35 36, on right: 34 35
additive_expr (48)
    on left: 37, on right: 34 35 45
additive_expr_rest (49)
    on left: 38 39 40, on right: 37 38 39
term (50)
    on left: 41, on right: 37 38 39
term_rest (51)
    on left: 42 43 44, on right: 41 42 43
factor (52)
    on left: 45 46 47, on right: 41 42 43


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1
    MAIN      shift, and go to state 2

    program           go to state 3
    fun_declaration   go to state 4
    main_declaration  go to state 5


state 1

    3 fun_declaration: FUNCTION . ID SLBRACKET SRBRACKET function_body

    ID  shift, and go to state 6


state 2

    4 main_declaration: MAIN . SLBRACKET SRBRACKET function_body

    SLBRACKET  shift, and go to state 7


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    2 program: fun_declaration . program

    FUNCTION  shift, and go to state 1
    MAIN      shift, and go to state 2

    program           go to state 9
    fun_declaration   go to state 4
    main_declaration  go to state 5


state 5

    1 program: main_declaration .

    $default  reduce using rule 1 (program)


state 6

    3 fun_declaration: FUNCTION ID . SLBRACKET SRBRACKET function_body

    SLBRACKET  shift, and go to state 10


state 7

    4 main_declaration: MAIN SLBRACKET . SRBRACKET function_body

    SRBRACKET  shift, and go to state 11


state 8

    0 $accept: program $end .

    $default  accept


state 9

    2 program: fun_declaration program .

    $default  reduce using rule 2 (program)


state 10

    3 fun_declaration: FUNCTION ID SLBRACKET . SRBRACKET function_body

    SRBRACKET  shift, and go to state 12


state 11

    4 main_declaration: MAIN SLBRACKET SRBRACKET . function_body

    BLBRACKET  shift, and go to state 13

    function_body  go to state 14


state 12

    3 fun_declaration: FUNCTION ID SLBRACKET SRBRACKET . function_body

    BLBRACKET  shift, and go to state 13

    function_body  go to state 15


state 13

    5 function_body: BLBRACKET . declaration_list statement_list BRBRACKET

    INT  shift, and go to state 16

    $default  reduce using rule 6 (declaration_list)

    declaration_list  go to state 17
    declaration_stat  go to state 18


state 14

    4 main_declaration: MAIN SLBRACKET SRBRACKET function_body .

    $default  reduce using rule 4 (main_declaration)


state 15

    3 fun_declaration: FUNCTION ID SLBRACKET SRBRACKET function_body .

    $default  reduce using rule 3 (fun_declaration)


state 16

    8 declaration_stat: INT . ID SEMICOLON

    ID  shift, and go to state 19


state 17

    5 function_body: BLBRACKET declaration_list . statement_list BRBRACKET

    IF         shift, and go to state 20
    WHILE      shift, and go to state 21
    FOR        shift, and go to state 22
    WRITE      shift, and go to state 23
    READ       shift, and go to state 24
    CALL       shift, and go to state 25
    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    BLBRACKET  shift, and go to state 28
    SLBRACKET  shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    $default  reduce using rule 9 (statement_list)

    statement_list   go to state 31
    statement        go to state 32
    if_stat          go to state 33
    while_stat       go to state 34
    for_stat         go to state 35
    write_stat       go to state 36
    read_stat        go to state 37
    compound_stat    go to state 38
    expression_stat  go to state 39
    call_stat        go to state 40
    expression       go to state 41
    bool_expr        go to state 42
    additive_expr    go to state 43
    term             go to state 44
    factor           go to state 45


state 18

    7 declaration_list: declaration_stat . declaration_list

    INT  shift, and go to state 16

    $default  reduce using rule 6 (declaration_list)

    declaration_list  go to state 46
    declaration_stat  go to state 18


state 19

    8 declaration_stat: INT ID . SEMICOLON

    SEMICOLON  shift, and go to state 47


state 20

   19 if_stat: IF . SLBRACKET expr SRBRACKET statement

    SLBRACKET  shift, and go to state 48


state 21

   20 while_stat: WHILE . SLBRACKET expr SRBRACKET statement

    SLBRACKET  shift, and go to state 49


state 22

   21 for_stat: FOR . SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET statement

    SLBRACKET  shift, and go to state 50


state 23

   22 write_stat: WRITE . expression SEMICOLON

    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    SLBRACKET  shift, and go to state 29

    expression     go to state 51
    bool_expr      go to state 42
    additive_expr  go to state 43
    term           go to state 44
    factor         go to state 45


state 24

   23 read_stat: READ . ID SEMICOLON

    ID  shift, and go to state 52


state 25

   27 call_stat: CALL . ID SLBRACKET SRBRACKET

    ID  shift, and go to state 53


state 26

   47 factor: NUM .

    $default  reduce using rule 47 (factor)


state 27

   32 expression: ID . EQL bool_expr
   46 factor: ID .

    EQL  shift, and go to state 54

    $default  reduce using rule 46 (factor)


state 28

   24 compound_stat: BLBRACKET . statement_list BRBRACKET

    IF         shift, and go to state 20
    WHILE      shift, and go to state 21
    FOR        shift, and go to state 22
    WRITE      shift, and go to state 23
    READ       shift, and go to state 24
    CALL       shift, and go to state 25
    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    BLBRACKET  shift, and go to state 28
    SLBRACKET  shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    $default  reduce using rule 9 (statement_list)

    statement_list   go to state 55
    statement        go to state 32
    if_stat          go to state 33
    while_stat       go to state 34
    for_stat         go to state 35
    write_stat       go to state 36
    read_stat        go to state 37
    compound_stat    go to state 38
    expression_stat  go to state 39
    call_stat        go to state 40
    expression       go to state 41
    bool_expr        go to state 42
    additive_expr    go to state 43
    term             go to state 44
    factor           go to state 45


state 29

   45 factor: SLBRACKET . additive_expr SRBRACKET

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    additive_expr  go to state 57
    term           go to state 44
    factor         go to state 45


state 30

   26 expression_stat: SEMICOLON .

    $default  reduce using rule 26 (expression_stat)


state 31

    5 function_body: BLBRACKET declaration_list statement_list . BRBRACKET

    BRBRACKET  shift, and go to state 58


state 32

   10 statement_list: statement . statement_list

    IF         shift, and go to state 20
    WHILE      shift, and go to state 21
    FOR        shift, and go to state 22
    WRITE      shift, and go to state 23
    READ       shift, and go to state 24
    CALL       shift, and go to state 25
    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    BLBRACKET  shift, and go to state 28
    SLBRACKET  shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    $default  reduce using rule 9 (statement_list)

    statement_list   go to state 59
    statement        go to state 32
    if_stat          go to state 33
    while_stat       go to state 34
    for_stat         go to state 35
    write_stat       go to state 36
    read_stat        go to state 37
    compound_stat    go to state 38
    expression_stat  go to state 39
    call_stat        go to state 40
    expression       go to state 41
    bool_expr        go to state 42
    additive_expr    go to state 43
    term             go to state 44
    factor           go to state 45


state 33

   11 statement: if_stat .

    $default  reduce using rule 11 (statement)


state 34

   12 statement: while_stat .

    $default  reduce using rule 12 (statement)


state 35

   13 statement: for_stat .

    $default  reduce using rule 13 (statement)


state 36

   15 statement: write_stat .

    $default  reduce using rule 15 (statement)


state 37

   14 statement: read_stat .

    $default  reduce using rule 14 (statement)


state 38

   16 statement: compound_stat .

    $default  reduce using rule 16 (statement)


state 39

   17 statement: expression_stat .

    $default  reduce using rule 17 (statement)


state 40

   18 statement: call_stat .

    $default  reduce using rule 18 (statement)


state 41

   25 expression_stat: expression . SEMICOLON

    SEMICOLON  shift, and go to state 60


state 42

   33 expression: bool_expr .

    $default  reduce using rule 33 (expression)


state 43

   34 bool_expr: additive_expr . bool_expr_rest

    COMPARE  shift, and go to state 61

    $default  reduce using rule 36 (bool_expr_rest)

    bool_expr_rest  go to state 62


state 44

   37 additive_expr: term . additive_expr_rest

    ADD  shift, and go to state 63
    MIN  shift, and go to state 64

    $default  reduce using rule 40 (additive_expr_rest)

    additive_expr_rest  go to state 65


state 45

   41 term: factor . term_rest

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 44 (term_rest)

    term_rest  go to state 68


state 46

    7 declaration_list: declaration_stat declaration_list .

    $default  reduce using rule 7 (declaration_list)


state 47

    8 declaration_stat: INT ID SEMICOLON .

    $default  reduce using rule 8 (declaration_stat)


state 48

   19 if_stat: IF SLBRACKET . expr SRBRACKET statement

    ID  shift, and go to state 69

    expr  go to state 70


state 49

   20 while_stat: WHILE SLBRACKET . expr SRBRACKET statement

    ID  shift, and go to state 69

    expr  go to state 71


state 50

   21 for_stat: FOR SLBRACKET . expr SEMICOLON expr SEMICOLON expr SRBRACKET statement

    ID  shift, and go to state 69

    expr  go to state 72


state 51

   22 write_stat: WRITE expression . SEMICOLON

    SEMICOLON  shift, and go to state 73


state 52

   23 read_stat: READ ID . SEMICOLON

    SEMICOLON  shift, and go to state 74


state 53

   27 call_stat: CALL ID . SLBRACKET SRBRACKET

    SLBRACKET  shift, and go to state 75


state 54

   32 expression: ID EQL . bool_expr

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    bool_expr      go to state 76
    additive_expr  go to state 43
    term           go to state 44
    factor         go to state 45


state 55

   24 compound_stat: BLBRACKET statement_list . BRBRACKET

    BRBRACKET  shift, and go to state 77


state 56

   46 factor: ID .

    $default  reduce using rule 46 (factor)


state 57

   45 factor: SLBRACKET additive_expr . SRBRACKET

    SRBRACKET  shift, and go to state 78


state 58

    5 function_body: BLBRACKET declaration_list statement_list BRBRACKET .

    $default  reduce using rule 5 (function_body)


state 59

   10 statement_list: statement statement_list .

    $default  reduce using rule 10 (statement_list)


state 60

   25 expression_stat: expression SEMICOLON .

    $default  reduce using rule 25 (expression_stat)


state 61

   35 bool_expr_rest: COMPARE . additive_expr bool_expr_rest

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    additive_expr  go to state 79
    term           go to state 44
    factor         go to state 45


state 62

   34 bool_expr: additive_expr bool_expr_rest .

    $default  reduce using rule 34 (bool_expr)


state 63

   38 additive_expr_rest: ADD . term additive_expr_rest

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    term    go to state 80
    factor  go to state 45


state 64

   39 additive_expr_rest: MIN . term additive_expr_rest

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    term    go to state 81
    factor  go to state 45


state 65

   37 additive_expr: term additive_expr_rest .

    $default  reduce using rule 37 (additive_expr)


state 66

   42 term_rest: MUL . factor term_rest

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    factor  go to state 82


state 67

   43 term_rest: DIV . factor term_rest

    NUM        shift, and go to state 26
    ID         shift, and go to state 56
    SLBRACKET  shift, and go to state 29

    factor  go to state 83


state 68

   41 term: factor term_rest .

    $default  reduce using rule 41 (term)


state 69

   28 expr: ID . EQL NUM
   29     | ID . COMPARE NUM
   30     | ID . EQL ID
   31     | ID . COMPARE ID

    EQL      shift, and go to state 84
    COMPARE  shift, and go to state 85


state 70

   19 if_stat: IF SLBRACKET expr . SRBRACKET statement

    SRBRACKET  shift, and go to state 86


state 71

   20 while_stat: WHILE SLBRACKET expr . SRBRACKET statement

    SRBRACKET  shift, and go to state 87


state 72

   21 for_stat: FOR SLBRACKET expr . SEMICOLON expr SEMICOLON expr SRBRACKET statement

    SEMICOLON  shift, and go to state 88


state 73

   22 write_stat: WRITE expression SEMICOLON .

    $default  reduce using rule 22 (write_stat)


state 74

   23 read_stat: READ ID SEMICOLON .

    $default  reduce using rule 23 (read_stat)


state 75

   27 call_stat: CALL ID SLBRACKET . SRBRACKET

    SRBRACKET  shift, and go to state 89


state 76

   32 expression: ID EQL bool_expr .

    $default  reduce using rule 32 (expression)


state 77

   24 compound_stat: BLBRACKET statement_list BRBRACKET .

    $default  reduce using rule 24 (compound_stat)


state 78

   45 factor: SLBRACKET additive_expr SRBRACKET .

    $default  reduce using rule 45 (factor)


state 79

   35 bool_expr_rest: COMPARE additive_expr . bool_expr_rest

    COMPARE  shift, and go to state 61

    $default  reduce using rule 36 (bool_expr_rest)

    bool_expr_rest  go to state 90


state 80

   38 additive_expr_rest: ADD term . additive_expr_rest

    ADD  shift, and go to state 63
    MIN  shift, and go to state 64

    $default  reduce using rule 40 (additive_expr_rest)

    additive_expr_rest  go to state 91


state 81

   39 additive_expr_rest: MIN term . additive_expr_rest

    ADD  shift, and go to state 63
    MIN  shift, and go to state 64

    $default  reduce using rule 40 (additive_expr_rest)

    additive_expr_rest  go to state 92


state 82

   42 term_rest: MUL factor . term_rest

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 44 (term_rest)

    term_rest  go to state 93


state 83

   43 term_rest: DIV factor . term_rest

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 44 (term_rest)

    term_rest  go to state 94


state 84

   28 expr: ID EQL . NUM
   30     | ID EQL . ID

    NUM  shift, and go to state 95
    ID   shift, and go to state 96


state 85

   29 expr: ID COMPARE . NUM
   31     | ID COMPARE . ID

    NUM  shift, and go to state 97
    ID   shift, and go to state 98


state 86

   19 if_stat: IF SLBRACKET expr SRBRACKET . statement

    IF         shift, and go to state 20
    WHILE      shift, and go to state 21
    FOR        shift, and go to state 22
    WRITE      shift, and go to state 23
    READ       shift, and go to state 24
    CALL       shift, and go to state 25
    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    BLBRACKET  shift, and go to state 28
    SLBRACKET  shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    statement        go to state 99
    if_stat          go to state 33
    while_stat       go to state 34
    for_stat         go to state 35
    write_stat       go to state 36
    read_stat        go to state 37
    compound_stat    go to state 38
    expression_stat  go to state 39
    call_stat        go to state 40
    expression       go to state 41
    bool_expr        go to state 42
    additive_expr    go to state 43
    term             go to state 44
    factor           go to state 45


state 87

   20 while_stat: WHILE SLBRACKET expr SRBRACKET . statement

    IF         shift, and go to state 20
    WHILE      shift, and go to state 21
    FOR        shift, and go to state 22
    WRITE      shift, and go to state 23
    READ       shift, and go to state 24
    CALL       shift, and go to state 25
    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    BLBRACKET  shift, and go to state 28
    SLBRACKET  shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    statement        go to state 100
    if_stat          go to state 33
    while_stat       go to state 34
    for_stat         go to state 35
    write_stat       go to state 36
    read_stat        go to state 37
    compound_stat    go to state 38
    expression_stat  go to state 39
    call_stat        go to state 40
    expression       go to state 41
    bool_expr        go to state 42
    additive_expr    go to state 43
    term             go to state 44
    factor           go to state 45


state 88

   21 for_stat: FOR SLBRACKET expr SEMICOLON . expr SEMICOLON expr SRBRACKET statement

    ID  shift, and go to state 69

    expr  go to state 101


state 89

   27 call_stat: CALL ID SLBRACKET SRBRACKET .

    $default  reduce using rule 27 (call_stat)


state 90

   35 bool_expr_rest: COMPARE additive_expr bool_expr_rest .

    $default  reduce using rule 35 (bool_expr_rest)


state 91

   38 additive_expr_rest: ADD term additive_expr_rest .

    $default  reduce using rule 38 (additive_expr_rest)


state 92

   39 additive_expr_rest: MIN term additive_expr_rest .

    $default  reduce using rule 39 (additive_expr_rest)


state 93

   42 term_rest: MUL factor term_rest .

    $default  reduce using rule 42 (term_rest)


state 94

   43 term_rest: DIV factor term_rest .

    $default  reduce using rule 43 (term_rest)


state 95

   28 expr: ID EQL NUM .

    $default  reduce using rule 28 (expr)


state 96

   30 expr: ID EQL ID .

    $default  reduce using rule 30 (expr)


state 97

   29 expr: ID COMPARE NUM .

    $default  reduce using rule 29 (expr)


state 98

   31 expr: ID COMPARE ID .

    $default  reduce using rule 31 (expr)


state 99

   19 if_stat: IF SLBRACKET expr SRBRACKET statement .

    $default  reduce using rule 19 (if_stat)


state 100

   20 while_stat: WHILE SLBRACKET expr SRBRACKET statement .

    $default  reduce using rule 20 (while_stat)


state 101

   21 for_stat: FOR SLBRACKET expr SEMICOLON expr . SEMICOLON expr SRBRACKET statement

    SEMICOLON  shift, and go to state 102


state 102

   21 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON . expr SRBRACKET statement

    ID  shift, and go to state 69

    expr  go to state 103


state 103

   21 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr . SRBRACKET statement

    SRBRACKET  shift, and go to state 104


state 104

   21 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET . statement

    IF         shift, and go to state 20
    WHILE      shift, and go to state 21
    FOR        shift, and go to state 22
    WRITE      shift, and go to state 23
    READ       shift, and go to state 24
    CALL       shift, and go to state 25
    NUM        shift, and go to state 26
    ID         shift, and go to state 27
    BLBRACKET  shift, and go to state 28
    SLBRACKET  shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    statement        go to state 105
    if_stat          go to state 33
    while_stat       go to state 34
    for_stat         go to state 35
    write_stat       go to state 36
    read_stat        go to state 37
    compound_stat    go to state 38
    expression_stat  go to state 39
    call_stat        go to state 40
    expression       go to state 41
    bool_expr        go to state 42
    additive_expr    go to state 43
    term             go to state 44
    factor           go to state 45


state 105

   21 for_stat: FOR SLBRACKET expr SEMICOLON expr SEMICOLON expr SRBRACKET statement .

    $default  reduce using rule 21 (for_stat)
