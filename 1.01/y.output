State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: fun_de_list main_de

    2 fun_de_list: fun_de fun_de_list
    3            | /* empty */

    4 fun_de: FUNKTION ID "(" ")" fun_body

    5 main_de: MAIN "(" ")" fun_body

    6 fun_body: "{" de_list stat_list "}"

    7 $@1: /* empty */

    8 de_list: de_stat $@1 de_list
    9        | /* empty */

   10 de_stat: INT ID ";"

   11 stat_list: stat stat_list
   12          | /* empty */

   13 stat: if_stat
   14     | while_stat
   15     | for_stat
   16     | read_stat
   17     | write_stat
   18     | compound_stat
   19     | expr_stat
   20     | call_stat

   21 if_stat: IF "(" expr ")" stat else_stat

   22 else_stat: ELSE stat
   23          | /* empty */

   24 while_stat: WHILE "(" expr ")" stat

   25 for_stat: FOR "(" expr ";" expr ";" expr ")" stat

   26 write_stat: WRITE expr ";"

   27 read_stat: READ ID ";"

   28 expr_stat: expr ";"
   29          | ";"

   30 compound_stat: "{" stat_list "}"

   31 call_stat: CALL ID "(" ")"

   32 expr: ID "=" bool_expr
   33     | bool_expr

   34 bool_expr: additive_expr
   35          | additive_expr OP additive_expr

   36 additive_expr: term term_list

   37 term_list: "-" term term_list
   38          | "+" term term_list
   39          | /* empty */

   40 term: factor factor_list

   41 factor_list: "*" factor factor_list
   42            | "/" factor factor_list
   43            | /* empty */

   44 factor: "(" additive_expr ")"
   45       | ID
   46       | NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNKTION (258) 4
MAIN (259) 5
INT (260) 10
IF (261) 21
WHILE (262) 24
FOR (263) 25
WRITE (264) 26
READ (265) 27
CALL (266) 31
NUM (267) 46
ID (268) 4 10 27 31 32 45
ELSE (269) 22
OP (270) 35
"(" (271) 4 5 21 24 25 31 44
")" (272) 4 5 21 24 25 31 44
"{" (273) 6 30
"}" (274) 6 30
";" (275) 10 25 26 27 28 29
"+" (276) 38
"-" (277) 37
"*" (278) 41
"/" (279) 42
"=" (280) 32


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
program (27)
    on left: 1, on right: 0
fun_de_list (28)
    on left: 2 3, on right: 1 2
fun_de (29)
    on left: 4, on right: 2
main_de (30)
    on left: 5, on right: 1
fun_body (31)
    on left: 6, on right: 4 5
de_list (32)
    on left: 8 9, on right: 6 8
$@1 (33)
    on left: 7, on right: 8
de_stat (34)
    on left: 10, on right: 8
stat_list (35)
    on left: 11 12, on right: 6 11 30
stat (36)
    on left: 13 14 15 16 17 18 19 20, on right: 11 21 22 24 25
if_stat (37)
    on left: 21, on right: 13
else_stat (38)
    on left: 22 23, on right: 21
while_stat (39)
    on left: 24, on right: 14
for_stat (40)
    on left: 25, on right: 15
write_stat (41)
    on left: 26, on right: 17
read_stat (42)
    on left: 27, on right: 16
expr_stat (43)
    on left: 28 29, on right: 19
compound_stat (44)
    on left: 30, on right: 18
call_stat (45)
    on left: 31, on right: 20
expr (46)
    on left: 32 33, on right: 21 24 25 26 28
bool_expr (47)
    on left: 34 35, on right: 32 33
additive_expr (48)
    on left: 36, on right: 34 35 44
term_list (49)
    on left: 37 38 39, on right: 36 37 38
term (50)
    on left: 40, on right: 36 37 38
factor_list (51)
    on left: 41 42 43, on right: 40 41 42
factor (52)
    on left: 44 45 46, on right: 40 41 42


state 0

    0 $accept: . program $end

    FUNKTION  shift, and go to state 1

    $default  reduce using rule 3 (fun_de_list)

    program      go to state 2
    fun_de_list  go to state 3
    fun_de       go to state 4


state 1

    4 fun_de: FUNKTION . ID "(" ")" fun_body

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: fun_de_list . main_de

    MAIN  shift, and go to state 7

    main_de  go to state 8


state 4

    2 fun_de_list: fun_de . fun_de_list

    FUNKTION  shift, and go to state 1

    $default  reduce using rule 3 (fun_de_list)

    fun_de_list  go to state 9
    fun_de       go to state 4


state 5

    4 fun_de: FUNKTION ID . "(" ")" fun_body

    "("  shift, and go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    5 main_de: MAIN . "(" ")" fun_body

    "("  shift, and go to state 11


state 8

    1 program: fun_de_list main_de .

    $default  reduce using rule 1 (program)


state 9

    2 fun_de_list: fun_de fun_de_list .

    $default  reduce using rule 2 (fun_de_list)


state 10

    4 fun_de: FUNKTION ID "(" . ")" fun_body

    ")"  shift, and go to state 12


state 11

    5 main_de: MAIN "(" . ")" fun_body

    ")"  shift, and go to state 13


state 12

    4 fun_de: FUNKTION ID "(" ")" . fun_body

    "{"  shift, and go to state 14

    fun_body  go to state 15


state 13

    5 main_de: MAIN "(" ")" . fun_body

    "{"  shift, and go to state 14

    fun_body  go to state 16


state 14

    6 fun_body: "{" . de_list stat_list "}"

    INT  shift, and go to state 17

    $default  reduce using rule 9 (de_list)

    de_list  go to state 18
    de_stat  go to state 19


state 15

    4 fun_de: FUNKTION ID "(" ")" fun_body .

    $default  reduce using rule 4 (fun_de)


state 16

    5 main_de: MAIN "(" ")" fun_body .

    $default  reduce using rule 5 (main_de)


state 17

   10 de_stat: INT . ID ";"

    ID  shift, and go to state 20


state 18

    6 fun_body: "{" de_list . stat_list "}"

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    $default  reduce using rule 12 (stat_list)

    stat_list      go to state 32
    stat           go to state 33
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 19

    8 de_list: de_stat . $@1 de_list

    $default  reduce using rule 7 ($@1)

    $@1  go to state 47


state 20

   10 de_stat: INT ID . ";"

    ";"  shift, and go to state 48


state 21

   21 if_stat: IF . "(" expr ")" stat else_stat

    "("  shift, and go to state 49


state 22

   24 while_stat: WHILE . "(" expr ")" stat

    "("  shift, and go to state 50


state 23

   25 for_stat: FOR . "(" expr ";" expr ";" expr ")" stat

    "("  shift, and go to state 51


state 24

   26 write_stat: WRITE . expr ";"

    NUM  shift, and go to state 27
    ID   shift, and go to state 28
    "("  shift, and go to state 29

    expr           go to state 52
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 25

   27 read_stat: READ . ID ";"

    ID  shift, and go to state 53


state 26

   31 call_stat: CALL . ID "(" ")"

    ID  shift, and go to state 54


state 27

   46 factor: NUM .

    $default  reduce using rule 46 (factor)


state 28

   32 expr: ID . "=" bool_expr
   45 factor: ID .

    "="  shift, and go to state 55

    $default  reduce using rule 45 (factor)


state 29

   44 factor: "(" . additive_expr ")"

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    additive_expr  go to state 57
    term           go to state 45
    factor         go to state 46


state 30

   30 compound_stat: "{" . stat_list "}"

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    $default  reduce using rule 12 (stat_list)

    stat_list      go to state 58
    stat           go to state 33
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 31

   29 expr_stat: ";" .

    $default  reduce using rule 29 (expr_stat)


state 32

    6 fun_body: "{" de_list stat_list . "}"

    "}"  shift, and go to state 59


state 33

   11 stat_list: stat . stat_list

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    $default  reduce using rule 12 (stat_list)

    stat_list      go to state 60
    stat           go to state 33
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 34

   13 stat: if_stat .

    $default  reduce using rule 13 (stat)


state 35

   14 stat: while_stat .

    $default  reduce using rule 14 (stat)


state 36

   15 stat: for_stat .

    $default  reduce using rule 15 (stat)


state 37

   17 stat: write_stat .

    $default  reduce using rule 17 (stat)


state 38

   16 stat: read_stat .

    $default  reduce using rule 16 (stat)


state 39

   19 stat: expr_stat .

    $default  reduce using rule 19 (stat)


state 40

   18 stat: compound_stat .

    $default  reduce using rule 18 (stat)


state 41

   20 stat: call_stat .

    $default  reduce using rule 20 (stat)


state 42

   28 expr_stat: expr . ";"

    ";"  shift, and go to state 61


state 43

   33 expr: bool_expr .

    $default  reduce using rule 33 (expr)


state 44

   34 bool_expr: additive_expr .
   35          | additive_expr . OP additive_expr

    OP  shift, and go to state 62

    $default  reduce using rule 34 (bool_expr)


state 45

   36 additive_expr: term . term_list

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 39 (term_list)

    term_list  go to state 65


state 46

   40 term: factor . factor_list

    "*"  shift, and go to state 66
    "/"  shift, and go to state 67

    $default  reduce using rule 43 (factor_list)

    factor_list  go to state 68


state 47

    8 de_list: de_stat $@1 . de_list

    INT  shift, and go to state 17

    $default  reduce using rule 9 (de_list)

    de_list  go to state 69
    de_stat  go to state 19


state 48

   10 de_stat: INT ID ";" .

    $default  reduce using rule 10 (de_stat)


state 49

   21 if_stat: IF "(" . expr ")" stat else_stat

    NUM  shift, and go to state 27
    ID   shift, and go to state 28
    "("  shift, and go to state 29

    expr           go to state 70
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 50

   24 while_stat: WHILE "(" . expr ")" stat

    NUM  shift, and go to state 27
    ID   shift, and go to state 28
    "("  shift, and go to state 29

    expr           go to state 71
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 51

   25 for_stat: FOR "(" . expr ";" expr ";" expr ")" stat

    NUM  shift, and go to state 27
    ID   shift, and go to state 28
    "("  shift, and go to state 29

    expr           go to state 72
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 52

   26 write_stat: WRITE expr . ";"

    ";"  shift, and go to state 73


state 53

   27 read_stat: READ ID . ";"

    ";"  shift, and go to state 74


state 54

   31 call_stat: CALL ID . "(" ")"

    "("  shift, and go to state 75


state 55

   32 expr: ID "=" . bool_expr

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    bool_expr      go to state 76
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 56

   45 factor: ID .

    $default  reduce using rule 45 (factor)


state 57

   44 factor: "(" additive_expr . ")"

    ")"  shift, and go to state 77


state 58

   30 compound_stat: "{" stat_list . "}"

    "}"  shift, and go to state 78


state 59

    6 fun_body: "{" de_list stat_list "}" .

    $default  reduce using rule 6 (fun_body)


state 60

   11 stat_list: stat stat_list .

    $default  reduce using rule 11 (stat_list)


state 61

   28 expr_stat: expr ";" .

    $default  reduce using rule 28 (expr_stat)


state 62

   35 bool_expr: additive_expr OP . additive_expr

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    additive_expr  go to state 79
    term           go to state 45
    factor         go to state 46


state 63

   38 term_list: "+" . term term_list

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    term    go to state 80
    factor  go to state 46


state 64

   37 term_list: "-" . term term_list

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    term    go to state 81
    factor  go to state 46


state 65

   36 additive_expr: term term_list .

    $default  reduce using rule 36 (additive_expr)


state 66

   41 factor_list: "*" . factor factor_list

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    factor  go to state 82


state 67

   42 factor_list: "/" . factor factor_list

    NUM  shift, and go to state 27
    ID   shift, and go to state 56
    "("  shift, and go to state 29

    factor  go to state 83


state 68

   40 term: factor factor_list .

    $default  reduce using rule 40 (term)


state 69

    8 de_list: de_stat $@1 de_list .

    $default  reduce using rule 8 (de_list)


state 70

   21 if_stat: IF "(" expr . ")" stat else_stat

    ")"  shift, and go to state 84


state 71

   24 while_stat: WHILE "(" expr . ")" stat

    ")"  shift, and go to state 85


state 72

   25 for_stat: FOR "(" expr . ";" expr ";" expr ")" stat

    ";"  shift, and go to state 86


state 73

   26 write_stat: WRITE expr ";" .

    $default  reduce using rule 26 (write_stat)


state 74

   27 read_stat: READ ID ";" .

    $default  reduce using rule 27 (read_stat)


state 75

   31 call_stat: CALL ID "(" . ")"

    ")"  shift, and go to state 87


state 76

   32 expr: ID "=" bool_expr .

    $default  reduce using rule 32 (expr)


state 77

   44 factor: "(" additive_expr ")" .

    $default  reduce using rule 44 (factor)


state 78

   30 compound_stat: "{" stat_list "}" .

    $default  reduce using rule 30 (compound_stat)


state 79

   35 bool_expr: additive_expr OP additive_expr .

    $default  reduce using rule 35 (bool_expr)


state 80

   38 term_list: "+" term . term_list

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 39 (term_list)

    term_list  go to state 88


state 81

   37 term_list: "-" term . term_list

    "+"  shift, and go to state 63
    "-"  shift, and go to state 64

    $default  reduce using rule 39 (term_list)

    term_list  go to state 89


state 82

   41 factor_list: "*" factor . factor_list

    "*"  shift, and go to state 66
    "/"  shift, and go to state 67

    $default  reduce using rule 43 (factor_list)

    factor_list  go to state 90


state 83

   42 factor_list: "/" factor . factor_list

    "*"  shift, and go to state 66
    "/"  shift, and go to state 67

    $default  reduce using rule 43 (factor_list)

    factor_list  go to state 91


state 84

   21 if_stat: IF "(" expr ")" . stat else_stat

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    stat           go to state 92
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 85

   24 while_stat: WHILE "(" expr ")" . stat

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    stat           go to state 93
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 86

   25 for_stat: FOR "(" expr ";" . expr ";" expr ")" stat

    NUM  shift, and go to state 27
    ID   shift, and go to state 28
    "("  shift, and go to state 29

    expr           go to state 94
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 87

   31 call_stat: CALL ID "(" ")" .

    $default  reduce using rule 31 (call_stat)


state 88

   38 term_list: "+" term term_list .

    $default  reduce using rule 38 (term_list)


state 89

   37 term_list: "-" term term_list .

    $default  reduce using rule 37 (term_list)


state 90

   41 factor_list: "*" factor factor_list .

    $default  reduce using rule 41 (factor_list)


state 91

   42 factor_list: "/" factor factor_list .

    $default  reduce using rule 42 (factor_list)


state 92

   21 if_stat: IF "(" expr ")" stat . else_stat

    ELSE  shift, and go to state 95

    ELSE      [reduce using rule 23 (else_stat)]
    $default  reduce using rule 23 (else_stat)

    else_stat  go to state 96


state 93

   24 while_stat: WHILE "(" expr ")" stat .

    $default  reduce using rule 24 (while_stat)


state 94

   25 for_stat: FOR "(" expr ";" expr . ";" expr ")" stat

    ";"  shift, and go to state 97


state 95

   22 else_stat: ELSE . stat

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    stat           go to state 98
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 96

   21 if_stat: IF "(" expr ")" stat else_stat .

    $default  reduce using rule 21 (if_stat)


state 97

   25 for_stat: FOR "(" expr ";" expr ";" . expr ")" stat

    NUM  shift, and go to state 27
    ID   shift, and go to state 28
    "("  shift, and go to state 29

    expr           go to state 99
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 98

   22 else_stat: ELSE stat .

    $default  reduce using rule 22 (else_stat)


state 99

   25 for_stat: FOR "(" expr ";" expr ";" expr . ")" stat

    ")"  shift, and go to state 100


state 100

   25 for_stat: FOR "(" expr ";" expr ";" expr ")" . stat

    IF     shift, and go to state 21
    WHILE  shift, and go to state 22
    FOR    shift, and go to state 23
    WRITE  shift, and go to state 24
    READ   shift, and go to state 25
    CALL   shift, and go to state 26
    NUM    shift, and go to state 27
    ID     shift, and go to state 28
    "("    shift, and go to state 29
    "{"    shift, and go to state 30
    ";"    shift, and go to state 31

    stat           go to state 101
    if_stat        go to state 34
    while_stat     go to state 35
    for_stat       go to state 36
    write_stat     go to state 37
    read_stat      go to state 38
    expr_stat      go to state 39
    compound_stat  go to state 40
    call_stat      go to state 41
    expr           go to state 42
    bool_expr      go to state 43
    additive_expr  go to state 44
    term           go to state 45
    factor         go to state 46


state 101

   25 for_stat: FOR "(" expr ";" expr ";" expr ")" stat .

    $default  reduce using rule 25 (for_stat)
